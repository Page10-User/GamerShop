

//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Gamer_Shop2._0
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class ProyectoTallerIIEntities1 : DbContext
{
    public ProyectoTallerIIEntities1()
        : base("name=ProyectoTallerIIEntities1")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<Categoría_producto> Categoría_producto { get; set; }

    public virtual DbSet<Proveedor> Proveedor { get; set; }

    public virtual DbSet<Compra> Compra { get; set; }

    public virtual DbSet<Detalle_venta> Detalle_venta { get; set; }

    public virtual DbSet<Método_pago> Método_pago { get; set; }

    public virtual DbSet<Tipo_usuario> Tipo_usuario { get; set; }

    public virtual DbSet<Usuario> Usuario { get; set; }

    public virtual DbSet<Venta> Venta { get; set; }

    public virtual DbSet<Cliente> Cliente { get; set; }

    public virtual DbSet<Producto> Producto { get; set; }

    public virtual DbSet<Detalle_compra> Detalle_compra { get; set; }


    public virtual ObjectResult<Nullable<int>> ExisteProductoPorSerial(Nullable<int> productoSerial)
    {

        var productoSerialParameter = productoSerial.HasValue ?
            new ObjectParameter("ProductoSerial", productoSerial) :
            new ObjectParameter("ProductoSerial", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ExisteProductoPorSerial", productoSerialParameter);
    }


    public virtual ObjectResult<GetDataBySerial_Result> GetDataBySerial(Nullable<int> numeroSerial)
    {

        var numeroSerialParameter = numeroSerial.HasValue ?
            new ObjectParameter("NumeroSerial", numeroSerial) :
            new ObjectParameter("NumeroSerial", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDataBySerial_Result>("GetDataBySerial", numeroSerialParameter);
    }


    public virtual int REGISTRARCOMPRA(Nullable<int> iD_Usuario, Nullable<int> iD_Proveedor, Nullable<System.DateTime> fecha, Nullable<double> total)
    {

        var iD_UsuarioParameter = iD_Usuario.HasValue ?
            new ObjectParameter("ID_Usuario", iD_Usuario) :
            new ObjectParameter("ID_Usuario", typeof(int));


        var iD_ProveedorParameter = iD_Proveedor.HasValue ?
            new ObjectParameter("ID_Proveedor", iD_Proveedor) :
            new ObjectParameter("ID_Proveedor", typeof(int));


        var fechaParameter = fecha.HasValue ?
            new ObjectParameter("Fecha", fecha) :
            new ObjectParameter("Fecha", typeof(System.DateTime));


        var totalParameter = total.HasValue ?
            new ObjectParameter("Total", total) :
            new ObjectParameter("Total", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REGISTRARCOMPRA", iD_UsuarioParameter, iD_ProveedorParameter, fechaParameter, totalParameter);
    }


    public virtual int REGISTRARVENTA(Nullable<int> iD_Usuario, Nullable<int> iD_Cliente, Nullable<int> iD_Método, Nullable<System.DateTime> fecha, Nullable<double> total)
    {

        var iD_UsuarioParameter = iD_Usuario.HasValue ?
            new ObjectParameter("ID_Usuario", iD_Usuario) :
            new ObjectParameter("ID_Usuario", typeof(int));


        var iD_ClienteParameter = iD_Cliente.HasValue ?
            new ObjectParameter("ID_Cliente", iD_Cliente) :
            new ObjectParameter("ID_Cliente", typeof(int));


        var iD_MétodoParameter = iD_Método.HasValue ?
            new ObjectParameter("ID_Método", iD_Método) :
            new ObjectParameter("ID_Método", typeof(int));


        var fechaParameter = fecha.HasValue ?
            new ObjectParameter("Fecha", fecha) :
            new ObjectParameter("Fecha", typeof(System.DateTime));


        var totalParameter = total.HasValue ?
            new ObjectParameter("Total", total) :
            new ObjectParameter("Total", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REGISTRARVENTA", iD_UsuarioParameter, iD_ClienteParameter, iD_MétodoParameter, fechaParameter, totalParameter);
    }

}

}

